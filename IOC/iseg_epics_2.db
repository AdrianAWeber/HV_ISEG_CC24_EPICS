###############################
# ######## Group Gi ######### #
###############################

############################################################################
##################           Voltage Set           #########################
############################################################################

record(dfanout, "${DEV}:${CAN_LINE}:${GROUP}:VoltageSet") {    #USE THIS RECORD FOR CSS AS VOLTAGE SET
  field( SELM, "All" )
  field( EGU, "V")
  field( OUTA, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet.DO3 NPP")
  field( OUTB, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet.DO6 NPP")
  field( OUTC, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet.DO9 NPP")
  field( OUTD, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet2.DO3 NPP")
  field( OUTE, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet2.DO6 NPP")
  field( OUTF, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet2.DO9 NPP")
  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet PP")
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_0)" )                  # Channels to execute (binary)
  field( LNK1, "${DEV}:${CAN_LINE}:0:GroupSelection.VAL NPP")
  field( DO2, "1" ) # 1 is equal to Voltage
  field( LNK2, "${DEV}:${CAN_LINE}:0:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:0:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_1)" )                    # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:1:GroupSelection.VAL NPP" )
  field( DO5, "1" ) # 1 is equal to Voltage
  field( LNK5, "${DEV}:${CAN_LINE}:1:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:1:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_2)" )                    # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:2:GroupSelection.VAL NPP" )
  field( DO8, "1" ) # 1 is equal to Voltage
  field( LNK8, "${DEV}:${CAN_LINE}:2:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:2:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet2" )
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageSet2") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_3)" )                  # Channels to execute (binary)
  field( LNK1, "${DEV}:${CAN_LINE}:3:GroupSelection.VAL NPP")
  field( DO2, "1" ) # 1 is equal to Voltage
  field( LNK2, "${DEV}:${CAN_LINE}:3:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:3:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_4)" )                    # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:4:GroupSelection.VAL NPP" )
  field( DO5, "1" ) # 1 is equal to Voltage
  field( LNK5, "${DEV}:${CAN_LINE}:4:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:4:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_5)" )                    # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:5:GroupSelection.VAL NPP" )
  field( DO8, "1" ) # 1 is equal to Voltage
  field( LNK8, "${DEV}:${CAN_LINE}:5:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:5:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:Start" )
}

###########################################################################
##################            Switch On           #########################
###########################################################################

record(dfanout, "${DEV}:${CAN_LINE}:${GROUP}:SwitchOn") {        #USE THIS RECORD FOR CSS SWITCH ON
  field( SELM, "All" )
  field( OUTA, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn.DO3 PP")
  field( OUTB, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn.DO6 PP")
  field( OUTC, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn.DO9 PP")
  field( OUTD, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn2.DO3 PP")
  field( OUTE, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn2.DO6 PP")
  field( OUTF, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn2.DO9 PP")
}


record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_0)" )                  # Channels to execute (binary)
  field( LNK1, "${DEV}:${CAN_LINE}:0:GroupSelection.VAL NPP" )
  field( DO2, "2" ) # 2 is equal to SwitchOn
  field( LNK2, "${DEV}:${CAN_LINE}:0:StartBehaviour.SELN NPP" )
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:0:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_1)" )                    # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:1:GroupSelection.VAL NPP" )
  field( DO5, "2" ) # 2 is equal to SwitchOn
  field( LNK5, "${DEV}:${CAN_LINE}:1:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:1:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_2)" )                    # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:2:GroupSelection.VAL NPP" )
  field( DO8, "2" ) # 2 is equal to SwitchOn
  field( LNK8, "${DEV}:${CAN_LINE}:2:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:2:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn2" )
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqSwitchOn2") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_3)" )                  # Channels to execute (binary)
  field( LNK1, "${DEV}:${CAN_LINE}:3:GroupSelection.VAL NPP" )
  field( DO2, "2" ) # 2 is equal to SwitchOn
  field( LNK2, "${DEV}:${CAN_LINE}:3:StartBehaviour.SELN NPP" )
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:3:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_4)" )                    # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:4:GroupSelection.VAL NPP" )
  field( DO5, "2" ) # 2 is equal to SwitchOn
  field( LNK5, "${DEV}:${CAN_LINE}:4:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:4:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_5)" )                    # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:5:GroupSelection.VAL NPP" )
  field( DO8, "2" ) # 2 is equal to SwitchOn
  field( LNK8, "${DEV}:${CAN_LINE}:5:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:5:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:Start" )
}

###########################################################################
##################          Current Set           #########################
###########################################################################

record(dfanout, "${DEV}:${CAN_LINE}:${GROUP}:CurrentSet") {    #USE THIS RECORD FOR CSS AS VOLTAGE SET
  field( SELM, "All" )
  field( EGU, "A")
  field( PREC, "4")
  field( OUTA, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet.DO3 NPP")
  field( OUTB, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet.DO6 NPP")
  field( OUTC, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet.DO9 NPP")
  field( OUTD, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet2.DO3 NPP")
  field( OUTE, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet2.DO6 NPP")
  field( OUTF, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet2.DO9 NPP")
  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet PP")
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_0)" )                  # Channels to execute (binary)
  field( LNK1, "${DEV}:${CAN_LINE}:0:GroupSelection.VAL NPP")
  field( DO2, "4" ) # 4 is equal to Current
  field( LNK2, "${DEV}:${CAN_LINE}:0:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:0:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_1)" )                    # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:1:GroupSelection.VAL NPP" )
  field( DO5, "4" ) # 4 is equal to Current
  field( LNK5, "${DEV}:${CAN_LINE}:1:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:1:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_2)" )                    # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:2:GroupSelection.VAL NPP" )
  field( DO8, "4" ) # 4 is equal to Current
  field( LNK8, "${DEV}:${CAN_LINE}:2:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:2:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet2" )
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentSet2") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_3)" )                  # Channels to execute (binary) 
  field( LNK1, "${DEV}:${CAN_LINE}:3:GroupSelection.VAL NPP")
  field( DO2, "4" ) # 4 is equal to Current
  field( LNK2, "${DEV}:${CAN_LINE}:3:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:3:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_4)" )                    # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:4:GroupSelection.VAL NPP" )
  field( DO5, "4" ) # 4 is equal to Current
  field( LNK5, "${DEV}:${CAN_LINE}:4:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:4:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_5)" )                    # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:5:GroupSelection.VAL NPP" )
  field( DO8, "4" ) # 4 is equal to Current
  field( LNK8, "${DEV}:${CAN_LINE}:5:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:5:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:Start" )
}

###########################################################################
##################    DelayedTripTime Set         #########################
###########################################################################

record(dfanout, "${DEV}:${CAN_LINE}:${GROUP}:DelayedTripTimeSet") {    #USE THIS RECORD FOR CSS AS VOLTAGE SET
  field( SELM, "All" )
  field( EGU, "s")
  field( OUTA, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet.DO3 NPP")
  field( OUTB, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet.DO6 NPP")
  field( OUTC, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet.DO9 NPP")
  field( OUTD, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet2.DO3 NPP")
  field( OUTE, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet2.DO6 NPP")
  field( OUTF, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet2.DO9 NPP")
  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet PP")
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_0)" )                  # Channels to execute (binary)   (here channel: 7)
  field( LNK1, "${DEV}:${CAN_LINE}:0:GroupSelection.VAL NPP")
  field( DO2, "8" ) # 4 is equal to DelayedTripTime
  field( LNK2, "${DEV}:${CAN_LINE}:0:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:0:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_1)" )                    # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:1:GroupSelection.VAL NPP" )
  field( DO5, "8" ) # 4 is equal to DelayedTripTime
  field( LNK5, "${DEV}:${CAN_LINE}:1:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:1:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_2)" )                    # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:2:GroupSelection.VAL NPP" )
  field( DO8, "8" ) # 4 is equal to DelayedTripTime
  field( LNK8, "${DEV}:${CAN_LINE}:2:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:2:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet2" )
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqDelayedTripTimeSet2") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_3)" )                  # Channels to execute (binary)   (here channel: 7)
  field( LNK1, "${DEV}:${CAN_LINE}:3:GroupSelection.VAL NPP")
  field( DO2, "8" ) # 4 is equal to DelayedTripTime
  field( LNK2, "${DEV}:${CAN_LINE}:3:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:3:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_4)" )                    # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:4:GroupSelection.VAL NPP" )
  field( DO5, "8" ) # 4 is equal to DelayedTripTime

  field( LNK5, "${DEV}:${CAN_LINE}:4:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:4:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_5)" )                    # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:5:GroupSelection.VAL NPP" )
  field( DO8, "8" ) # 4 is equal to DelayedTripTime
  field( LNK8, "${DEV}:${CAN_LINE}:5:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:5:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:Start" )
}

###########################################################################
##################     Voltage Bound Set         ##########################
###########################################################################

record(dfanout, "${DEV}:${CAN_LINE}:${GROUP}:VoltageBoundsSet") {    #USE THIS RECORD FOR CSS AS VOLTAGE SET
  field( SELM, "All" )
  field( EGU, "V")
  field( OUTA, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet.DO3 NPP")
  field( OUTB, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet.DO6 NPP")
  field( OUTC, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet.DO9 NPP")
  field( OUTD, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet2.DO3 NPP")
  field( OUTE, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet2.DO6 NPP")
  field( OUTF, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet2.DO9 NPP")
  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet PP")
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_0)" )           	        # Channels to execute (binary)
  field( LNK1, "${DEV}:${CAN_LINE}:0:GroupSelection.VAL NPP")
  field( DO2, "16" ) 			# 16 is equal to EmergancySet
  field( LNK2, "${DEV}:${CAN_LINE}:0:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:0:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_1)" )                     # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:1:GroupSelection.VAL NPP" )
  field( DO5, "16" ) 			# 16 is equal to EmergancySet
  field( LNK5, "${DEV}:${CAN_LINE}:1:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:1:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_2)" )                     # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:2:GroupSelection.VAL NPP" )
  field( DO8, "16" ) 			# 16 is equal to EmergancySet
  field( LNK8, "${DEV}:${CAN_LINE}:2:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:2:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet2" )
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqVoltageBoundsSet2") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_3)" )           	        # Channels to execute (binary)

  field( LNK1, "${DEV}:${CAN_LINE}:3:GroupSelection.VAL NPP")
  field( DO2, "16" ) 			# 16 is equal to EmergancySet
  field( LNK2, "${DEV}:${CAN_LINE}:3:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:3:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_4)" )                     # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:4:GroupSelection.VAL NPP" )
  field( DO5, "16" ) 			# 16 is equal to EmergancySet
  field( LNK5, "${DEV}:${CAN_LINE}:4:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:4:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_5)" )                     # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:5:GroupSelection.VAL NPP" )
  field( DO8, "16" ) 			# 16 is equal to EmergancySet
  field( LNK8, "${DEV}:${CAN_LINE}:5:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:5:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:Start" )
}

###########################################################################
##################     Current Bound Set         ##########################
###########################################################################

record(dfanout, "${DEV}:${CAN_LINE}:${GROUP}:CurrentBoundsSet") {    #USE THIS RECORD FOR CSS AS VOLTAGE SET
  field( SELM, "All" )
  field( EGU, "A")
  field( PREC, "4")
  field( OUTA, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet.DO3 NPP")
  field( OUTB, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet.DO6 NPP")
  field( OUTC, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet.DO9 NPP")
  field( OUTD, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet2.DO3 NPP")
  field( OUTE, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet2.DO6 NPP")
  field( OUTF, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet2.DO9 NPP")
  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet PP")
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_0)" )           	        # Channels to execute (binary)
  field( LNK1, "${DEV}:${CAN_LINE}:0:GroupSelection.VAL NPP")
  field( DO2, "32" ) 			# 32 is equal to EmergancySet
  field( LNK2, "${DEV}:${CAN_LINE}:0:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:0:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_1)" )                     # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:1:GroupSelection.VAL NPP" )
  field( DO5, "32" ) 			# 32 is equal to EmergancySet
  field( LNK5, "${DEV}:${CAN_LINE}:1:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:1:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_2)" )                     # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:2:GroupSelection.VAL NPP" )
  field( DO8, "32" ) 			# 32 is equal to EmergancySet
  field( LNK8, "${DEV}:${CAN_LINE}:2:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:2:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet2" )
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqCurrentBoundsSet2") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_3)" )           	        # Channels to execute (binary)
  field( LNK1, "${DEV}:${CAN_LINE}:3:GroupSelection.VAL NPP")
  field( DO2, "32" ) 			# 32 is equal to EmergancySet
  field( LNK2, "${DEV}:${CAN_LINE}:3:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:3:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_4)" )                     # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:4:GroupSelection.VAL NPP" )
  field( DO5, "32" ) 			# 32 is equal to EmergancySet
  field( LNK5, "${DEV}:${CAN_LINE}:4:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:4:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_5)" )                     # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:5:GroupSelection.VAL NPP" )
  field( DO8, "32" ) 			# 32 is equal to EmergancySet
  field( LNK8, "${DEV}:${CAN_LINE}:5:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:5:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:Start" )
}

###########################################################################
##################       Emergancy Set           ##########################
###########################################################################

record(dfanout, "${DEV}:${CAN_LINE}:${GROUP}:EmergancySet") {    #USE THIS RECORD FOR CSS AS VOLTAGE SET
  field( SELM, "All" )
  field( OUTA, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet.DO3 NPP")
  field( OUTB, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet.DO6 NPP")
  field( OUTC, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet.DO9 NPP")
  field( OUTD, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet2.DO3 NPP")
  field( OUTE, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet2.DO6 NPP")
  field( OUTF, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet2.DO9 NPP")
  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet PP")
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_0)" )           	        # Channels to execute (binary)   (here channel: 7)
  field( LNK1, "${DEV}:${CAN_LINE}:0:GroupSelection.VAL NPP")
  field( DO2, "64" ) 			# 64 is equal to EmergancySet
  field( LNK2, "${DEV}:${CAN_LINE}:0:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:0:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_1)" )                     # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:1:GroupSelection.VAL NPP" )
  field( DO5, "64" ) 			# 64 is equal to EmergancySet
  field( LNK5, "${DEV}:${CAN_LINE}:1:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:1:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_2)" )                     # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:2:GroupSelection.VAL NPP" )
  field( DO8, "64" ) 			# 64 is equal to EmergancySet
  field( LNK8, "${DEV}:${CAN_LINE}:2:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:2:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet2" )
}

record(seq, "${DEV}:${CAN_LINE}:${GROUP}:SeqEmergancySet2") {    #each "block" is one Module
  field( SELM, "All" )

  field( DO1, "$(CH_SEL_MOD_3)" )           	        # Channels to execute (binary)   (here channel: 7)
  field( LNK1, "${DEV}:${CAN_LINE}:3:GroupSelection.VAL NPP")
  field( DO2, "64" ) 			# 64 is equal to EmergancySet
  field( LNK2, "${DEV}:${CAN_LINE}:3:StartBehaviour.SELN NPP")
  #field( DO3, "")
  field( LNK3, "${DEV}:${CAN_LINE}:3:StartBehaviour.VAL NPP")

  field( DO4, "$(CH_SEL_MOD_4)" )                     # Channels to execute (binary)
  field( LNK4, "${DEV}:${CAN_LINE}:4:GroupSelection.VAL NPP" )
  field( DO5, "64" ) 			# 64 is equal to EmergancySet
  field( LNK5, "${DEV}:${CAN_LINE}:4:StartBehaviour.SELN NPP" )
  #field( DO6, "" )
  field( LNK6, "${DEV}:${CAN_LINE}:4:StartBehaviour.VAL NPP" )

  field( DO7, "$(CH_SEL_MOD_5)" )                     # Channels to execute (binary)
  field( LNK7, "${DEV}:${CAN_LINE}:5:GroupSelection.VAL NPP" )
  field( DO8, "64" ) 			# 64 is equal to EmergancySet
  field( LNK8, "${DEV}:${CAN_LINE}:5:StartBehaviour.SELN NPP" )
  #field( DO9, "" )
  field( LNK9, "${DEV}:${CAN_LINE}:5:StartBehaviour.VAL NPP" )

  field( FLNK, "${DEV}:${CAN_LINE}:${GROUP}:Start" )
}

##################################

record(dfanout, "${DEV}:${CAN_LINE}:${GROUP}:Start"){
  field( OUTA, "${DEV}:${CAN_LINE}:0:GroupSelection.PROC" )
  field( OUTB, "${DEV}:${CAN_LINE}:1:GroupSelection.PROC" )
  field( OUTC, "${DEV}:${CAN_LINE}:2:GroupSelection.PROC" )
  field( OUTD, "${DEV}:${CAN_LINE}:3:GroupSelection.PROC" )
  field( OUTE, "${DEV}:${CAN_LINE}:4:GroupSelection.PROC" )
  field( OUTF, "${DEV}:${CAN_LINE}:5:GroupSelection.PROC" )
}



###################################################################################################################
################## Saving fields for all Groups ###################################################################
###################################################################################################################

#record( ai, "${DEV}:${CAN_LINE}:${GROUP}:Save:VoltageSet" ) {
#  field( INP,  "${DEV}:${CAN_LINE}:${GROUP}:VoltageSet.VAL" )
#}

#record( ai, "${DEV}:${CAN_LINE}:${GROUP}:Save:CurrentSet" ) {
#  field( INP,  "${DEV}:${CAN_LINE}:${GROUP}:CurrentSet.VAL" )
#}

#record( ai, "${DEV}:${CAN_LINE}:${GROUP}:Save:DelayedTripTimeSet" ) {
#  field( INP,  "${DEV}:${CAN_LINE}:${GROUP}:DelayedTripTimeSet.VAL" )
#}

#record( ai, "${DEV}:${CAN_LINE}:${GROUP}:Save:VoltageBoundsSet" ) {
#  field( INP,  "${DEV}:${CAN_LINE}:${GROUP}:VoltageBoundsSet.VAL" )
#}

#record( ai, "${DEV}:${CAN_LINE}:${GROUP}:Save:CurrentBoundsSet" ) {
#  field( INP,  "${DEV}:${CAN_LINE}:${GROUP}:CurrentBoundsSet.VAL" )
#}

#record( bi, "${DEV}:${CAN_LINE}:${GROUP}:Save:EmergancySet" ) {
#  field( INP,  "${DEV}:${CAN_LINE}:${GROUP}:EmergancySet.VAL" )
#}

###########################################################################
################## Loading fields for all Groups ##########################
###########################################################################

#record( ao, "${DEV}:${CAN_LINE}:${GROUP}:Load:VoltageSet" ) {
#  field( OMSL, "closed_loop")
#  field( DOL, "${DEV}:${CAN_LINE}:${GROUP}:Save:VoltageSet.VAL")
#  field( OUT, "${DEV}:${CAN_LINE}:${GROUP}:VoltageSet.VAL NPP" )
#}

#record( ao, "${DEV}:${CAN_LINE}:${GROUP}:Load:CurrentSet" ) {
#  field( OMSL, "closed_loop")
#  field( DOL, "${DEV}:${CAN_LINE}:${GROUP}:Save:CurrentSet.VAL")
#  field( OUT, "${DEV}:${CAN_LINE}:${GROUP}:CurrentSet.VAL NPP" )
#}

#record( ao, "${DEV}:${CAN_LINE}:${GROUP}:Load:DelayedTripTimeSet" ) {
#  field( OMSL, "closed_loop")
#  field( DOL, "${DEV}:${CAN_LINE}:${GROUP}:Save:DelayedTripTimeSet.VAL")
#  field( OUT, "${DEV}:${CAN_LINE}:${GROUP}:DelayedTripTimeSet.VAL NPP" )
#}

#record( ao, "${DEV}:${CAN_LINE}:${GROUP}:Load:VoltageBoundsSet" ) {
#  field( OMSL, "closed_loop")
#  field( DOL, "${DEV}:${CAN_LINE}:${GROUP}:Save:VoltageBoundsSet.VAL")
#  field( OUT, "${DEV}:${CAN_LINE}:${GROUP}:VoltageBoundsSet.VAL NPP" )
#}

#record( ao, "${DEV}:${CAN_LINE}:${GROUP}:Load:CurrentBoundsSet" ) {
#  field( OMSL, "closed_loop")
#  field( DOL, "${DEV}:${CAN_LINE}:${GROUP}:Save:CurrentBoundsSet.VAL")
#  field( OUT, "${DEV}:${CAN_LINE}:${GROUP}:CurrentBoundsSet.VAL NPP" )
#}

#record( bo, "${DEV}:${CAN_LINE}:${GROUP}:Load:EmergancySet" ) {
#  field( OMSL, "closed_loop")
#  field( DOL, "${DEV}:${CAN_LINE}:${GROUP}:Save:EmergancySet.VAL")
#  field( OUT, "${DEV}:${CAN_LINE}:${GROUP}:EmergancySet.VAL NPP" )
#}

###########################################################################
############## Process all Saving fields for all Groups ###################
###########################################################################

#record( fanout, "${DEV}:${CAN_LINE}:Grouping:SaveAll") {	## Add new LNKs for new Groups!
#   field( LNK1, "${DEV}:${CAN_LINE}:G1:SaveAll")
#   field( LNK2, "${DEV}:${CAN_LINE}:G2:SaveAll")
#}

###########################################################################

#record( fanout, "${DEV}:${CAN_LINE}:${GROUP}:SaveAll") {
#  field( LNK1, "${DEV}:${CAN_LINE}:${GROUP}:Save:VoltageSet.PROC")
#  field( LNK2, "${DEV}:${CAN_LINE}:${GROUP}:Save:CurrentSet.PROC")
#  field( LNK3, "${DEV}:${CAN_LINE}:${GROUP}:Save:DelayedTripTimeSet.PROC")
#  field( LNK4, "${DEV}:${CAN_LINE}:${GROUP}:Save:VoltageBoundsSet.PROC")
#  field( LNK5, "${DEV}:${CAN_LINE}:${GROUP}:Save:CurrentBoundsSet.PROC")
#  field( LNK6, "${DEV}:${CAN_LINE}:${GROUP}:Save:EmergancySet.PROC")
#}

###########################################################################
############## Process all Saving fields for all Groups ###################
###########################################################################

#record( fanout, "${DEV}:${CAN_LINE}:Grouping:LoadAll") {	## Add new LNKs for new Groups!
#   field( LNK1, "${DEV}:${CAN_LINE}:G1:LoadAll")
#   field( LNK2, "${DEV}:${CAN_LINE}:G2:LoadAll")
#}

###########################################################################

#record( fanout, "${DEV}:${CAN_LINE}:${GROUP}:LoadAll") {
#  field( LNK1, "${DEV}:${CAN_LINE}:${GROUP}:Load:VoltageSet.PROC")
#  field( LNK2, "${DEV}:${CAN_LINE}:${GROUP}:Load:CurrentSet.PROC")
#  field( LNK3, "${DEV}:${CAN_LINE}:${GROUP}:Load:DelayedTripTimeSet.PROC")
#  field( LNK4, "${DEV}:${CAN_LINE}:${GROUP}:Load:VoltageBoundsSet.PROC")
#  field( LNK5, "${DEV}:${CAN_LINE}:${GROUP}:Load:CurrentBoundsSet.PROC")
#  field( LNK6, "${DEV}:${CAN_LINE}:${GROUP}:Load:EmergancySet.PROC")
#}

